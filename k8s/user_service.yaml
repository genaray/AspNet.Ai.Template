# user-service.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      
      # Init container, wait till otel-collector is ready
      initContainers:
        - name: wait-for-otel
          image: curlimages/curl:8.8.0
          command:
            - sh
            - -c
            - |
              echo "Waiting for OpenTelemetry Collector on otel-collector:4317 ..."
              until nc -z otel-collector 4317; do
                sleep 5
              done
              echo "Collector reachable â€“ starting backend."
      
      # Service container
      containers:
        - name: user-service
          image: user-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Development"
            - name: ASPNETCORE_URLS
              value: "http://*:8080"
            - name: ConnectionStrings__DefaultConnection
              value: "Host=user-postgres-svc;Port=5432;Database=backend-db;Username=admin;Password=pw"
          readinessProbe: # Health Checks
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: user-service-svc
spec:
  type: NodePort #LoadBalancer for prod
  selector:
    app: user-service
  ports:
    - port: 8081 # Change to 8080? 
      targetPort: 8080
      nodePort: 30001